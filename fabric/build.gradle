architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"
    modImplementation "com.terraformersmc:modmenu:${rootProject.modmenu_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }

    modLocalRuntime "me.fzzyhmstrs:fzzy_config:${rootProject.fzzy_config_version}+${rootProject.minecraft_version}"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}
